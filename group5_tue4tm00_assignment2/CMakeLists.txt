cmake_minimum_required(VERSION 3.8)
project(group5_tue4tm00_assignment2)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# Find dependencies
find_package(ament_cmake REQUIRED)
find_package(ament_cmake_python REQUIRED)
find_package(rclcpp REQUIRED)
find_package(rclpy REQUIRED)
find_package(std_msgs REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

# Include Cpp "include" directory
include_directories(include)

# Create Cpp executables
add_executable(hello_world_cpp_node src/hello_world_cpp_node.cpp)
ament_target_dependencies(hello_world_cpp_node rclcpp std_msgs)

# Install Cpp executables
install(TARGETS
  hello_world_cpp_node
  DESTINATION lib/${PROJECT_NAME})

# Install Python modules
ament_python_install_package(${PROJECT_NAME})

# Install Python executables
install(PROGRAMS
  scripts/safe_navigation_costmap.py
  scripts/search_based_path_planner.py
  scripts/sensor_based_path_follower.py
  DESTINATION lib/${PROJECT_NAME}
)

# Install package folders
install(DIRECTORY
  launch
  config
  maps
  DESTINATION share/${PROJECT_NAME}/
)

# Install group5_tue4tm00_assignment1
install(
  DIRECTORY ../group5_tue4tm00_assignment1/
  DESTINATION lib/python3.10/site-packages/group5_tue4tm00_assignment1
)

ament_package()
